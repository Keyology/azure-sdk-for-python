trigger: none

variables:
  PythonVersion: 'pypy3.7'
  

jobs:
  - job: 'win2019tool'
    displayName: 'Windows Tool Run'
    pool:
      name: azsdk-pool-mms-win-2019-general
      vmImage: MMS2019
    steps:
      - task: UsePythonVersion@0
        displayName: 'Use Python 3.9'
        inputs:
          versionSpec: '3.9'

      - pwsh: |
          pip install requests
        displayName: Install Requirements

      - template: /eng/common/testproxy/test-proxy-tool.yml
        parameters:
          runProxy: false

      - pwsh: |
          test-proxy --version
        displayName: Check direct invocation

      - pwsh: |
          python scripts/devops_tasks/test_proxy_python_startup.py
        displayName: Spin the proxy from python
        continueOnError: true

      - pwsh: |
          cat $(Build.SourcesDirectory)/_proxy_log_default.log
        displayName: dump output file
        continueOnError: true


  - job: 'linux2020tool'
    displayName: 'Linux Tool Run'
    pool:
      name: azsdk-pool-mms-ubuntu-2004-general
      vmImage: MMSUbuntu20.04
    steps:
      - task: UsePythonVersion@0
        displayName: 'Use Python pypy3'
        inputs:
          versionSpec: 'pypy3'

      - pwsh: |
          pip install requests
        displayName: Install Requirements

      - template: /eng/common/testproxy/test-proxy-tool.yml
        parameters:
          runProxy: false

      - pwsh: |
          test-proxy --version
        displayName: Check direct invocation

      - pwsh: |
          python scripts/devops_tasks/test_proxy_python_startup.py
        displayName: Spin the proxy from python
        continueOnError: true

      - pwsh: |
          cat $(Build.SourcesDirectory)/_proxy_log_default.log
        displayName: dump output file
        continueOnError: true

  - job: 'macos'
    displayName: 'Mac Tool Run'
    pool:
      vmImage: 'macOS-10.15'
    steps:
      - task: UsePythonVersion@0
        displayName: 'Use Python python 3.10'
        inputs:
          versionSpec: '3.10'

      - pwsh: |
          pip install requests
        displayName: Install Requirements

      - template: /eng/common/testproxy/test-proxy-tool.yml
        parameters:
          runProxy: false

      - pwsh: |
          test-proxy --version
        displayName: Check direct invocation

      - pwsh: |
          python scripts/devops_tasks/test_proxy_python_startup.py
        displayName: Spin the proxy from python
        continueOnError: true

      - pwsh: |
          cat $(Build.SourcesDirectory)/_proxy_log_default.log
        displayName: dump output file
        continueOnError: true